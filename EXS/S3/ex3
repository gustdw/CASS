.globl main
.text
callersaveregisterwipe: # Don't modify this function!
    mv t0, ra
    li ra, 0
    li t1, 0
    li t2, 0
    li t3, 0
    li t4, 0
    li t5, 0
    li t6, 0
    li a0, 0
    li a1, 0
    li a2, 0
    li a3, 0
    li a4, 0
    li a5, 0
    li a6, 0
    li a7, 0
    jr t0

sum_fixme:
    addi sp, sp, -32
    sw a0, 28(sp)
    sw a1, 24(sp)
    sw a2, 20(sp)
    sw a3, 16(sp)
    sw a4, 12(sp)
    sw a5, 8(sp)
    sw a6, 4(sp)
    sw a7, 0(sp)
    
    addi sp, sp, -32
    sw t0, 28(sp)
    sw t1, 24(sp)
    sw t2, 20(sp)
    sw t3, 16(sp)
    sw t4, 12(sp)
    sw t5, 8(sp)
    sw t6, 4(sp)
    sw ra, 0(sp)

    jal callersaveregisterwipe # Don't modify this line

    lw ra, 0(sp)
    lw t6, 4(sp)
    lw t5, 8(sp)
    lw t4, 12(sp)
    lw t3, 16(sp)
    lw t2, 20(sp)
    lw t1, 24(sp)
    lw t0, 28(sp)
    
    lw a7, 32(sp)
    lw a6, 36(sp)
    lw a5, 40(sp)
    lw a4, 44(sp)
    lw a3, 48(sp)
    lw a2, 52(sp)
    lw a1, 56(sp)
    lw a0, 60(sp)
    
    addi sp, sp, 64

    addi sp, sp, -4
    sw s0, 0(sp)

    add s0, a0, a1  # Don't modify this line
    mv  a0, s0      # Don't modify this line

    lw s0, 0(sp)

    ret # Don't modify this line

main: # Don't modify this function!
    li a0, 1
    li a1, 2
    li s0, 0xdeadbeef
    jal sum_fixme
    # Correct execution should terminate 1) Without errors, 2) with the value 3 in a0 AND 3) with the value 0xdeadbeef in s0

